---
version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16

jobs:
  lint-go:
    docker:
      - image: circleci/golang:1.14
    environment:
      LINT_VERSION: v1.26.0
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ checksum "go.sum" }}
            - v1-{{ .Branch }}
            - v1
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Install golangci-lint
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |\
              sh -s -- -b $(go env GOPATH)/bin ${LINT_VERSION}
      - run:
          name: Lint
          command: |
            golangci-lint run --out-format junit-xml -v > ${TEST_RESULTS}/go-test-report.xml
      - store_test_results:
          path: /tmp/test-results

  lint-tf:
    docker:
      - image: circleci/buildpack-deps
    environment:
      AWS_REGION: us-east-1
      TERRAFORM_VERSION: 0.12.26
    steps:
      - checkout
      - run:
          name: Install terraform
          command: |
            curl -o /tmp/terraform.zip -sSL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            sudo unzip -d /usr/bin /tmp/terraform.zip
            sudo chmod ugo+x /usr/bin/terraform
      - run:
          name: Install tflint
          command: |
            curl -Ls https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - run:
          name: Terraform init
          command: |
            cat \<<EOF > ~/.terraformrc
            credentials "app.terraform.io" {
              token = "${TF_USER_TOKEN}"
            }
            EOF
            cd infra
            mkdir .terraform
            echo -n "staging" > .terraform/environment
            terraform init
      - run:
          name: Lint
          command: |
            cd infra
            terraform validate
            tflint --deep

  build:
    docker:
      - image: circleci/golang:1.14
    environment:
      GOOS: linux
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ checksum "go.sum" }}
            - v1-{{ .Branch }}
            - v1
      - run: go build -o bin/fanout ./cmd/fanout
      - run: go build -o bin/refresh ./cmd/refresh
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod
      - store_artifacts:
          path: bin
      - persist_to_workspace:
          root: .
          paths:
            - bin

  upload:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - attach_workspace:
          at: .
      - run: mv bin/* .
      - run: zip fanout.zip fanout
      - run: zip refresh.zip refresh
      - aws-s3/copy:
          from: fanout.zip
          to: s3://rmdy-artifacts/rollover/fanout.zip
      - aws-s3/copy:
          from: refresh.zip
          to: s3://rmdy-artifacts/rollover/refresh.zip

  deploy:
    docker:
      - image: cimg/python:3.8
    parameters:
      env:
        type: string
        default: staging
    steps:
      - checkout
      - run:
          name: Ensure dependencies
          command: |
            pip3 install requests
      - run:
          name: Deploy
          command: |
            export TF_WORKSPACE_NAME="rollover-<<parameters.env>>"
              ./scripts/deploy.py -m "Deploy from Circle build ${CIRCLE_BUILD_NUM}" infra

_tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v.*/

workflows:
  every-commit:
    jobs:
      - lint-go
      - lint-tf
      - build

  tags:
    jobs:
      - lint-go:
          <<: *tags_only
      - lint-tf:
          <<: *tags_only
      - build:
          <<: *tags_only
      - upload:
          <<: *tags_only
          requires:
            - lint-go
            - build
      - deploy:
          env: staging
          <<: *tags_only
          requires:
            - lint-tf
            - upload
      # - deploy:
      #     env: prod
      #     <<: *tags_only
      #     requires:
      #       - lint-tf
      #       - upload
